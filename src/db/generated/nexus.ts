/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as Context from "../../@types/index"
import * as prisma from "@prisma/client"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  AuthPayload: { // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Link: prisma.Link;
  Mutation: {};
  Profile: prisma.Profile;
  Query: {};
  RememberItemCategory: prisma.RememberItemCategory;
  RememberItems: prisma.RememberItems;
  User: prisma.User;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
}

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Link: { // field return type
    createdAt: string; // String!
    description: string; // String!
    id: number; // Int!
    url: string; // String!
    user: NexusGenRootTypes['User']; // User!
    userId: number; // Int!
  }
  Mutation: { // field return type
    addCategory: NexusGenRootTypes['RememberItemCategory']; // RememberItemCategory!
    addLink: NexusGenRootTypes['Link']; // Link!
    createUser: NexusGenRootTypes['User']; // User!
  }
  Profile: { // field return type
    id: number; // Int!
    user: NexusGenRootTypes['User']; // User!
    userId: number; // Int!
  }
  Query: { // field return type
    ok: boolean; // Boolean!
  }
  RememberItemCategory: { // field return type
    category: string; // String!
    id: number; // Int!
    user: NexusGenRootTypes['User']; // User!
    userId: number; // Int!
  }
  RememberItems: { // field return type
    category: NexusGenRootTypes['RememberItemCategory']; // RememberItemCategory!
    categoryId: number; // Int!
    createdAt: string; // String!
    id: number; // Int!
    item: string; // String!
    user: NexusGenRootTypes['User']; // User!
    userId: number; // Int!
  }
  User: { // field return type
    categories: NexusGenRootTypes['RememberItemCategory'][]; // [RememberItemCategory!]!
    createdAt: string; // String!
    email: string; // String!
    id: number; // Int!
    links: NexusGenRootTypes['Link'][]; // [Link!]!
    password: string; // String!
    RememberItems: NexusGenRootTypes['RememberItems'][]; // [RememberItems!]!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addCategory: { // args
      category: string; // String!
    }
    addLink: { // args
      description: string; // String!
      url: string; // String!
    }
    createUser: { // args
      email: string; // String!
      password: string; // String!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthPayload" | "Link" | "Mutation" | "Profile" | "Query" | "RememberItemCategory" | "RememberItems" | "User";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}